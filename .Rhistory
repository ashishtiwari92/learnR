?rnorm
help.search("rnorm")
args("rnorm")
rnorm
download.file("http://www.lepem.ufc.br/jaa/colorout_1.0-3.tar.gz", destfile = "colorout_1.0-3.tar.gz")
install.packages("colorout_1.0-3.tar.gz", type = "source", repos = NULL)
return(invisible(list_of_outputs))
?base::options
stop("an error occurred")
message("an error occurred")
cat("error occurred", file=stderr())
cls
clear
con <- url("http://www.jhsph.edu","r")
x <- readLines(con)
head(x)
lappy
ucscDb <- dbconnect(MySQL(),user="genome",host="genome-mysql.cse.ucse.edu")
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucse.edu")
available.package()
a <- available.package()
a <- available.packages()
View(a)
b <- available.packages() head(rownames(a),3)
b <- available.packages()
head(rownames(a),3)
install.packages("slidify")
install.packages("ggplot2")
install.packages("slidify")
library("ggplot2")
library(ggplot2)
clear
clr
search()
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
version()
R.version()
R.Version()
R,version.string
R.version.string()
R.Version.string()
R.Version.string
R.version.string
R.version.string
clear
cls
x <- 1
print(x)
msg <- "hellow"
print(msg)
x
msg
x <- 1:20
x
y <- 1:30
y
y <- 1:70
y
x <- 0.6
class(x)
as.integer(x)
aslogical(x)
as.logical(x)
m <- matrix(row=2, col=3)
m <- matrix(nrow=2, ncol=3)
m
dim(m)
attributes(m)
m <- matrix(1:6 row=2, col=3)
m <- matrix(1:6, row=2, col=3)
m <- matrix(1:6, nrow=2, ncol=3)
m
m <- 1:10
m
dim(m) <c(2,5)
m
x <- 1:3
y - 10:12
y <- 10:12
cbind(x,y)
rbind(x,y)
x <- 1:3
names(x)
names(x) <- c("food","bar","noof")
x
names(x)
for (i in 1:10){}
for (i in 1:10){print(i)}
complete <- function(directory, id = 1:332) {
# create character vector of filenames based on passed id
datafiles <- c()
datafiles <- c(datafiles,
paste(directory, "/", formatC(id, width=3, flag="0"), ".csv", sep=""))
# read data from files
my_data <- lapply(datafiles, read.csv)
my_data <- do.call(rbind, my_data)
#get completely observed cases
my_data <- my_data[complete.cases(my_data), ]
# create character vector to hold results
data_vector <- c()
# break data into subsets based on monitor ID
# assign results of each subset to data_vector
for (j in 1:length(id)) {
data <- subset(my_data, my_data[,4]==id[j])
data_vector <- c(data_vector, id[j], nrow(data))
}
# convert vector to matrix
data_matrix <- matrix(data_vector, nrow=length(id), ncol=2, byrow=TRUE)
#convert matrix to data frame
finaldata <- data.frame(data_matrix)
# rename columns
colnames(finaldata) <- c("id", "nobs")
return(finaldata)
}
complete <- function(directory, id = 1:332) {
# create character vector of filenames based on passed id
datafiles <- c()
datafiles <- c(datafiles, paste(directory, "/specdata", formatC(id, width=3, flag="0"), ".csv", sep=""))
my_data <- lapply(datafiles, read.csv)
my_data <- do.call(rbind, my_data)
my_data()
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
getwd()
1
2
3
4
5
6
7
8
9
10
exit
done
exit()
close()
close
submit()
1
2
3
4
5
6
7
8
9
10
exit
getwd()
setwd('C:/Users/archie/Downloads/learnR')
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
head(cr)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
3
4
5
6
7
8
9
10
2
1
1
1
getwd()
2
submit()
1
1
submit()
2
4
source('pollutantmean2.R')
setwd('C:/Users/archie/Downloads/learnR/specdata')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
1
2
3
4
5
submit()
1
submit()
getwd()
setwd('C:/Users/archie/Downloads/learnR/specdata')
submit()
source(pollutantmean)
source('pollutantmean')
source('pollutantmean.R')
submit()
1
submit()
setwd('C:/Users/archie/Downloads/learnR')
submit()
1
submit()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd('C:\Users\archie\Documents')
getwd('C:/Users/archie/Documents')
setwd('C:/Users/archie/Documents')
submit()
1
submit()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd('C:/Users/archie/Downloads/learnR')
getwd()
submit()
